name: Build and Deploy

on:
  push:
    branches: [ ]

jobs:
  build:
    name: Build backend
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: FaceAnalyzer.Api
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag plavy/faceanalyzer-backend:${{ github.sha }}
    - name: Push the Docker image
      run: docker push plavy/faceanalyzer-backend:${{ github.sha }}
  deploy:
    name: Deploy backend to staging
    needs: build
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: FaceAnalyzer.Api
    environment:
      name: ${{ github.ref_name }}
      url: https://backend.staging.faceanalyzer.plavy.me/swagger/
    env:
      KUBECONFIG: "./kubeconfig"
      AAD_SERVICE_PRINCIPAL_CLIENT_ID: ${{ secrets.AAD_SERVICE_PRINCIPAL_CLIENT_ID }}
      AAD_SERVICE_PRINCIPAL_CLIENT_SECRET: ${{ secrets.AAD_SERVICE_PRINCIPAL_CLIENT_SECRET }}
    steps:
    - uses: actions/checkout@v3
    - name: Add kubeconfig
      uses: mobiledevops/secret-to-file-action@v1
      with:
        base64-encoded-secret: ${{ secrets.KUBE_CONFIG_AZURE }}
        filename: "kubeconfig"
        working-directory: "FaceAnalyzer.Api"
    - uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.24'
    - name: Apply the Kubernetes manifest
      run: kubectl apply -n faceanalyzer -f manifest-staging.yaml
    - name: Set the image tag
      run: kubectl set image -n faceanalyzer deployment/faceanalyzer-backend faceanalyzer-backend=plavy/faceanalyzer-backend:${{ github.sha }}
    - name: Install dotnet ef
      run: dotnet tool install dotnet-ef --global
    - name: Set appsettings
      run: cp appsettings.Production.json appsettings.Development.json
    - name: Create migration bundle
      run: dotnet ef migrations bundle --force -r linux-x64 --self-contained
    - name: Apply migration bundle
      run: > 
        export POD_NAME=$(kubectl get pods -n faceanalyzer -l app=faceanalyzer-backend --no-headers -o custom-columns=":metadata.name");
        kubectl cp -n faceanalyzer appsettings.Development.json ${POD_NAME}:.;
        kubectl cp -n faceanalyzer ./efbundle ${POD_NAME}:.;
        kubectl exec -n faceanalyzer ${POD_NAME} -- ./efbundle;
